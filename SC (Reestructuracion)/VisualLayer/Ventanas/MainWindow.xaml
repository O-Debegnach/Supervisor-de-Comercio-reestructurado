<Window x:Name="VentanaPrincipal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Conversores="clr-namespace:VisualLayer.Conversores"
        xmlns:Commands="clr-namespace:VisualLayer.Resources.Classes.Commands"
        xmlns:Dialogos="clr-namespace:VisualLayer.Dialogos"
        xmlns:Controles="clr-namespace:VisualLayer.Controles"
        x:Class="VisualLayer.MainWindow"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        BorderBrush="{DynamicResource PrimaryHueMidBrush}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        materialDesign:ShadowAssist.ShadowEdges="Bottom, Right" materialDesign:ShadowAssist.ShadowDepth="Depth5" materialDesign:ShadowAssist.Darken="True"
        mc:Ignorable="d" ResizeMode="CanResizeWithGrip" Height="463.333" Width="800" Style="{DynamicResource DefaultWindowStyle}" Icon="/VisualLayer;component/Icono SC.ico" MinWidth="800" MinHeight="530">
    <Window.Resources>
        <materialDesign:NotZeroConverter x:Key="NotZeroConverter"/>
        <!--Conversores-->
        <materialDesign:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Conversores:ExpirationConverter x:Key="ExpirationConverter"/>
        <Conversores:NullToBoolConvereter x:Key="NullToBoolConverter"/>
        <Conversores:ComprobadorVencimientos x:Key="ComprobadorVencimientos"/>
        <Conversores:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
        <Conversores:StockToStringConverter x:Key="StockToStringConverter"/>
        <Conversores:DataGridCellHeightToExpandedHeight x:Key="DataGridCellHeightConverter"/>

        <!--Contextmenu-->
        <ContextMenu x:Key="cmStockGrid">
            <MenuItem Header="Ordenar por">
                <MenuItem Header="Cantidad" Click="ContextMenuStock_Click"/>
                <MenuItem Header="Codigo" Click="ContextMenuStock_Click"/>
                <MenuItem Header="Precio" Click="ContextMenuStock_Click"/>
                <MenuItem Header="Producto" Click="ContextMenuStock_Click"/>
                <MenuItem Header="Vencimiento" Click="ContextMenuStock_Click"/>
            </MenuItem>
            <MenuItem Header="Columnas">
                <MenuItem Header="Cantidad" IsCheckable="True" IsChecked="True" Checked="ContextMenuItemStock_Checked" Unchecked="ContextMenuItemStock_Checked"/>
                <MenuItem Header="Código" IsCheckable="True" IsChecked="True" Checked="ContextMenuItemStock_Checked" Unchecked="ContextMenuItemStock_Checked"/>
                <MenuItem Header="Precio" IsCheckable="True" IsChecked="True" Checked="ContextMenuItemStock_Checked" Unchecked="ContextMenuItemStock_Checked"/>
                <MenuItem Header="Producto" IsCheckable="True" IsChecked="True" Checked="ContextMenuItemStock_Checked" Unchecked="ContextMenuItemStock_Checked"/>
                <MenuItem Header="Vencimiento" IsCheckable="True" IsChecked="True" Checked="ContextMenuItemStock_Checked" Unchecked="ContextMenuItemStock_Checked"/>
            </MenuItem>
            <MenuItem Header="Editar articulo" InputGestureText="Ctrl + E">
                <MenuItem.Icon>
                    <materialDesign:PackIcon Kind="Edit"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Eliminar articulo" InputGestureText="Ctrl + Supr">
                <MenuItem.Icon>
                    <materialDesign:PackIcon Kind="Trash"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Commands:Open.ConfigTicketera" CanExecute="ConfigTicketera_CanExecute" Executed="ConfigTicketera_Executed"/>
    </Window.CommandBindings>
    <Grid x:Name="gdPrincipal">
        <materialDesign:DrawerHost x:Name="drawerHost" LeftDrawerBackground="Transparent" IsLeftDrawerOpen="{Binding IsChecked, ElementName=toggleButton}" Grid.ColumnSpan="2" Grid.RowSpan="3">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <Grid Background="Transparent">
                    <materialDesign:TransitioningContent Margin="180,189,0,0"
                        RunHint="IsVisibleChanged" Height="Auto" VerticalAlignment="Top" >
                        <materialDesign:TransitioningContent.Style>
                            <Style TargetType="{x:Type materialDesign:TransitioningContent}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=toggleAdministrar}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:TransitioningContent.Style>
                        <materialDesign:TransitioningContent.OpeningEffects>
                            <materialDesign:TransitionEffect Kind="SlideInFromLeft" />
                        </materialDesign:TransitioningContent.OpeningEffects>

                        <Menu MaxWidth="280">
                            <MenuItem Command="Commands:Open.ConfigTicketera" InputGestureText="Ctrl+Alt+P"/>
                        </Menu>
                    </materialDesign:TransitioningContent>



                    <DockPanel HorizontalAlignment="Left" Background="White" Width="180" x:Name="Menu">
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button DockPanel.Dock="Top" Margin="10,10,71,10" Width="37" Height="37" Padding="0" Click="HomeButton_Click">

                                <materialDesign:PackIcon Kind="Home" Height="30" Width="30"/>
                            </Button>
                            <ToggleButton 
                                    Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" 
                                    Margin="10"
                                    IsChecked="{Binding IsChecked, ElementName=toggleButton, Mode=TwoWay}" />

                        </StackPanel>
                        <ListBox x:Name="menuList" SelectedIndex="1" FontSize="20" MouseUp="ListBox_MouseUp">
                            <ListBoxItem x:Name="ItemVentas" Content="Ventas"/>
                            <ListBoxItem x:Name="ItemStock" Content="Stock"/>
                            <ListBoxItem x:Name="ItemCaja" Content="Caja"/>
                            <ListBoxItem x:Name="ItemAdministrar" Padding="0" Height="32">
                                <StackPanel Margin="0" Height="32" Width="180" Orientation="Horizontal">
                                    <Label Content="Administrar" VerticalContentAlignment="Center" Margin="0" Width="148"/>
                                    <ToggleButton x:Name="toggleAdministrar" Width="32">
                                        <ToggleButton.Style>
                                            <Style BasedOn="{StaticResource ToggleMenuDesplegable}" TargetType="{x:Type ToggleButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLeftDrawerOpen, ElementName=drawerHost, UpdateSourceTrigger=PropertyChanged}"
                                                                 Value="True">
                                                        <Setter Property="IsChecked" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </StackPanel>
                            </ListBoxItem>
                        </ListBox>
                    </DockPanel>

                </Grid>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid x:Name="grid">
                <materialDesign:ColorZone Panel.ZIndex="10"
                                          HorizontalAlignment="Left"
                                          Margin="10,10,0,0" VerticalAlignment="Top"
                                          Mode="PrimaryMid"
                                          CornerRadius="4"
                                          materialDesign:ShadowAssist.ShadowEdges="Left,Right,Bottom"
                                          materialDesign:ShadowAssist.ShadowDepth="Depth2" >
                    <ToggleButton x:Name="toggleButton" Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                </materialDesign:ColorZone>

                <Grid x:Name="MainMenu">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=menuList}" Value="-1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="56"/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Content="Ventas" Padding="5" Margin="20" Grid.Row="1" Style="{StaticResource ImageButtonStyle}" >
                        <Button.Background>
                            <ImageBrush ImageSource="/VisualLayer;component/Resources/Archivos/Imagenes/VentasScreen.jpg" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Button Content="Stock" Padding="5" Margin="20" Grid.Row="1" Grid.Column="1" Style="{StaticResource ImageButtonStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="/VisualLayer;component/Resources/Archivos/Imagenes/StockScreen.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Button Content="Caja" Padding="5" Margin="20" Grid.Row="2" Style="{StaticResource ImageButtonStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="/VisualLayer;component/Resources/Archivos/Imagenes/CajaScreen.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                    <Button Content="Administrar" Padding="5" Margin="20" Grid.Row="2" Grid.Column="1" Style="{StaticResource ImageButtonStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="/VisualLayer;component/Resources/Archivos/Imagenes/AdminScreen.png" Stretch="Uniform"/>
                        </Button.Background>
                    </Button>
                </Grid>

                <materialDesign:DialogHost x:Name="DialogHostVentas" CloseOnClickAway="True" IsTabStop="False">
                    <Grid x:Name="Ventas" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ItemVentas}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="95"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="282*"/>
                            <ColumnDefinition Width="433*"/>
                            <ColumnDefinition Width="111"/>
                        </Grid.ColumnDefinitions>
                        <DataGrid x:Name="dgProductosVenta" BorderBrush="LightGray" BorderThickness="1" Background="White" Margin="10,55,10,10"
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2" AutoGenerateColumns="False"
                              materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2" Grid.RowSpan="2"
                              CanUserAddRows="False" IsReadOnly="True" PreviewKeyDown="Ventas_KeyDown" MouseDoubleClick="Ventas_MouseDoubleClick" IsTabStop="True" TabIndex="2" >
                            <DataGrid.Columns>
                                <DataGridTextColumn CanUserReorder="False" Header="Codigo" Width="*" Binding="{Binding Codigo}"/>
                                <DataGridTextColumn CanUserReorder="False" Header="Producto" Width="2*" Binding="{Binding Producto}"/>
                                <DataGridTextColumn CanUserReorder="False" Header="Precio" Width="*" Binding="{Binding Precio}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <!--Search Bar-->
                        <Controles:SearchBar Height="38" Margin="59,12,10,0" VerticalAlignment="Top" x:Name="SearchBarVentas"
                                         HintText="Buscar producto" SearchMode="Contains" SearchTrigger="OnTextChanged"
                                         SearchSource="{Binding Articulos, ElementName=VentanaPrincipal, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         SearchByProperties="Producto Codigo" KeyDown="Ventas_KeyDown" SearchDone="SearchBar_SearchDone" IsTabStop="True" TabIndex="1"/>

                        <DataGrid x:Name="dgVentas" Background="White" BorderBrush="LightGray" BorderThickness="1" Margin="0,12,10,0" Grid.Column="1"
                              materialDesign:DataGridAssist.CellPadding="4 2 2 2" SelectionMode="Single" AutoGenerateColumns="False"
                              materialDesign:DataGridAssist.ColumnHeaderPadding="2 4 2 4 " Grid.ColumnSpan="2" CanUserAddRows="False" IsTabStop="True" TabIndex="3" UnloadingRow="dgVentas_UnloadingRow">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Producto" IsReadOnly="True" CanUserReorder="False" CanUserResize="False" Width="100*" Binding="{Binding ArticuloOrigen.Producto}" />
                                <DataGridTextColumn Header="Cantidad" IsReadOnly="False" CanUserReorder="False" CanUserResize="False" Width="30*" Binding="{Binding Cantidad, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Precio Unitario" IsReadOnly="True" CanUserReorder="False" CanUserResize="False" Width="40*" Binding="{Binding ArticuloOrigen.Precio}"/>
                                <DataGridTextColumn Header="Precio Total" IsReadOnly="True" CanUserReorder="False" CanUserResize="False" Width="35*" Binding="{Binding PrecioTotal, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Content="Total: $" BorderThickness="1,1,0,1" Background="White" BorderBrush="#FFABABAB" FontSize="48" Grid.Row="1" Margin="0,22,0,10" Grid.Column="1" HorizontalAlignment="Left" Width="170" FontFamily="Roboto" VerticalContentAlignment="Center"/>
                        <Label x:Name="Label_Total" Content="{Binding TotalDeVenta, ElementName=VentanaPrincipal, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0,1,1,1" Background="White" BorderBrush="#FFABABAB" FontSize="48" FontFamily="Roboto" Grid.Row="1" Margin="170,22,10,10" Grid.Column="1" VerticalContentAlignment="Center"/>
                        <Button x:Name="btTerminarVenta" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,10,10"
                            Grid.Row="1" VerticalAlignment="Bottom" Width="91" Height="63" Click="Ventas_Click"
                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                            IsEnabled="{Binding Items.Count, Converter={StaticResource NotZeroConverter}, ElementName=dgVentas, Mode=OneWay}">
                            <materialDesign:PackIcon Kind="Check" Height="Auto" Width="Auto" TabIndex="4" IsTabStop="True" />
                        </Button>

                    </Grid>
                </materialDesign:DialogHost>

                <materialDesign:DialogHost x:Name="DialogHostStock" CloseOnClickAway="True" IsTabStop="False">
                    <Grid x:Name="Stock" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ItemStock}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="47"/>
                            <RowDefinition/>
                            <RowDefinition Height="180"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="58"/>
                            <ColumnDefinition Width="551*"/>
                            <ColumnDefinition Width="191*"/>
                        </Grid.ColumnDefinitions>
                        <!--Seach Bar-->
                        <Controles:SearchBar Grid.Row="0" Margin="2,10,10,0" Grid.Column="1" x:Name="SearchBarStock" HintText="Buscar Producto"
                                             SearchSource="{Binding ItemsSource, ElementName=DGStock, UpdateSourceTrigger=PropertyChanged}"
                                             SearchMode="Contains" SearchByProperties="Producto, Codigo" SearchDone="SearchBarStock_SearchDone"
                                             IsCaseSensitive="True" SearchTrigger="OnTextChanged" Grid.ColumnSpan="2">
                        </Controles:SearchBar>
                        <DataGrid x:Name="DGStock" BorderBrush="LightGray" BorderThickness="1" Margin="10,10,0,10" AutoGenerateColumns="False" materialDesign:DataGridAssist.CellPadding="2"
                              materialDesign:DataGridAssist.ColumnHeaderPadding="2" Grid.RowSpan="2" CanUserAddRows="False" Grid.ColumnSpan="2" 
                                  ContextMenu="{DynamicResource cmStockGrid}" PreviewKeyDown="DGStock_PreviewKeyDown"
                                  ItemsSource="{Binding ItemListArticulos, ElementName=VentanaPrincipal, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" HorizontalScrollBarVisibility="Disabled" SelectionChanged="DGStock_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Producto}" ClipboardContentBinding="{x:Null}" Header="Producto" MaxWidth="200"/>
                                <DataGridTextColumn Binding="{Binding Codigo}" IsReadOnly="True" ClipboardContentBinding="{x:Null}" Header="Código"/>
                                <DataGridTextColumn IsReadOnly="True" Header="Cantidad" SortMemberPath="Stock_Actual">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource StockToStringConverter}">
                                                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}" Path="Item.TipoVenta" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}" Path="Item.Stock_Actual" UpdateSourceTrigger="PropertyChanged"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding Precio, StringFormat=C}" ClipboardContentBinding="{x:Null}" Header="Precio"/>
                                <DataGridTextColumn Binding="{Binding ProximoVencimiento, Converter={StaticResource DateTimeToStringConverter}, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" ClipboardContentBinding="{x:Null}" Header="Vencimiento" Width="20*"/>
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                    <Style.Triggers>
                                        <!--Productos por vencer-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="1"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#FFBA08"/>
                                        </MultiDataTrigger>

                                        <!--Productos Vencidos-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="2"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#BBFF0000"/>
                                        </MultiDataTrigger>
                                        
                                        
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Margin" Value="0 0 0 2"/>
                                            <Setter Property="FontWeight" Value="DemiBold"/>
                                            <Setter Property="OpacityMask" Value="LightSlateGray"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridRow}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="SB_SelectionOut">
                                                        <DoubleAnimation Duration="0:0:0.3" From="1.1" To="1" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="DGR_Border_Scale"/>
                                                        <DoubleAnimation Duration="0:0:0.3" From="1.09" To="1" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="DGR_Border_Scale"/>
                                                    </Storyboard>
                                                    <Storyboard x:Key="SB_SelectionIn">
                                                        <DoubleAnimation Duration="0:0:0.3" From="1" To="0.9" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="DGR_Border_Scale"/>
                                                        <DoubleAnimation Duration="0:0:0.5" From="0.9" To="1" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="DGR_Border_Scale">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ElasticEase EasingMode="EaseOut" Springiness="-5" Oscillations="1"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.5" From="1" To="1.09" Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="DGR_Border_Scale"/>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Border x:Name="DGR_Border"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        SnapsToDevicePixels="True">
                                                    <Border.RenderTransform>
                                                        <ScaleTransform x:Name="DGR_Border_Scale" CenterX="0.5"/>
                                                    </Border.RenderTransform>
                                                    <SelectiveScrollingGrid RenderTransformOrigin="0.5,0.5">

                                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                                        <SelectiveScrollingGrid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </SelectiveScrollingGrid.RowDefinitions>
                                                        <DataGridCellsPresenter Grid.Column="1"
                                                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <DataGridDetailsPresenter Grid.Column="1"
                                                                                  Grid.Row="1"
                                                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                                                        <DataGridRowHeader Grid.Column="0"
                                                                           Grid.Row="0"
                                                                           Grid.RowSpan="2"
                                                                           SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                                           Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    </SelectiveScrollingGrid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource SB_SelectionIn}"/>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard Storyboard="{StaticResource SB_SelectionOut}"/>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>

                                        <!--Productos por vencer-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="1"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#FFBA08"/>
                                            <Setter Property="BorderThickness" Value="0 1 0 1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="1"/>
                                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#FFBA08"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </MultiDataTrigger>

                                        <!--Productos Vencidos-->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="2"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#00FF0000"/>
                                            <Setter Property="BorderThickness" Value="0 1 0 1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding EstadoVencimiento, Converter={StaticResource ComprobadorVencimientos}}" Value="2"/>
                                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="#00FF0000"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </MultiDataTrigger>
                                        
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" Value="DimGray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                        </DataGrid>
                        <DataGrid x:Name="DGEnvases" Grid.Column="2" Margin="10,10,9,51.333" ItemsSource="{Binding ItemListEnvases, ElementName=VentanaPrincipal,UpdateSourceTrigger=PropertyChanged}"
                              BorderBrush="LightGray" BorderThickness="1" CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False"
                              materialDesign:DataGridAssist.ColumnHeaderPadding="3" materialDesign:DataGridAssist.CellPadding="3" Grid.RowSpan="2" Grid.Row="1">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Producto}" ClipboardContentBinding="{x:Null}" Header="Nombre"/>
                                <DataGridTextColumn Binding="{Binding CantidadEnvases}" ClipboardContentBinding="{x:Null}" Header="Cantidad"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button x:Name="BtIngresoPedido" Content="Ingresar Producto" Grid.Column="2" Margin="9,138,10,0" Grid.Row="2" VerticalAlignment="Top"
                            Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Click="BtIngresoPedido_Click"/>
                    </Grid>
                </materialDesign:DialogHost>

                <Grid x:Name="Caja" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ItemCaja}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="116"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBox Margin="10,54,5,0"
                             TextWrapping="Wrap" VerticalAlignment="Top"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             materialDesign:HintAssist.Hint="Dinero en caja al empezar el turno"
                             ToolTip="Dinero en caja al iniciar el turno"/>
                    <TextBox Margin="10,96,5,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Efectivo recibido"
                        ToolTip="Dinero recaudado de ventas en efectivo"/>
                    <TextBox Margin="10,138,5,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Debito recibido"
                        ToolTip="Dinero recaudado de ventas en debito o credito"/>
                    <TextBox Margin="10,222,5,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Dinero depositado"
                        ToolTip="Dinero en caja al iniciar el turno"/>
                    <DockPanel Height="39" Margin="10,183,5,0" VerticalAlignment="Top"
                                ToolTip="Dinero a depositar en caja" LastChildFill="True">
                        <Button Height="Auto" Width="Auto" Margin="10 10 0 0" Padding="0" 
                                materialDesign:ShadowAssist.ShadowDepth="Depth2" DockPanel.Dock="Right">
                            <materialDesign:PackIcon Kind="Check" Height="Auto" Width="Auto" />
                        </Button>
                        <DockPanel LastChildFill="True">
                            <Label Content="Dinero a depositar: " VerticalContentAlignment="Bottom" Width="151"/>

                            <ComboBox VerticalAlignment="Stretch"
                                  materialDesign:HintAssist.Hint="Cantidad a depositar"
                                  materialDesign:TextFieldAssist.HasClearButton="True"
                                  IsEditable="True"
                                  Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBoxItem Content="100"/>
                                <ComboBoxItem Content="500"/>
                                <ComboBoxItem Content="1000"/>
                                <ComboBoxItem Content="2000"/>
                                <ComboBoxItem Content="5000"/>
                            </ComboBox>
                        </DockPanel>

                    </DockPanel>
                    <TextBox Margin="5,54,10,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Dinero en caja el finalizar el turno"
                        ToolTip="Dinero dejado en caja al finalizar el turno" Grid.Column="1"/>
                    <TextBox Margin="5,96,10,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Pago a proveedores"
                        ToolTip="Dinero de la caja usado para pagar a proveedores" Grid.Column="1"/>
                    <TextBox Margin="5,138,10,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Sueldos o bonos"
                        ToolTip="Dinero de la caja usado para pagar sueldos o bonos" Grid.Column="1"/>
                    <TextBox Margin="5,222,10,0"
                        TextWrapping="Wrap" VerticalAlignment="Top"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        materialDesign:HintAssist.Hint="Dinero extraido"
                        ToolTip="Dinero extraido de la caja" Grid.Column="1"/>
                    <DockPanel Height="39" Margin="5,183,10,0" VerticalAlignment="Top"
                        ToolTip="Dinero a extrael de la caja" LastChildFill="True" Grid.Column="1">
                        <Button Height="Auto" Width="Auto" Margin="10 10 0 0" Padding="0" 
                            materialDesign:ShadowAssist.ShadowDepth="Depth2" DockPanel.Dock="Right">
                            <materialDesign:PackIcon Kind="Check" Height="Auto" Width="Auto" />
                        </Button>
                        <DockPanel LastChildFill="True">
                            <Label Content="Dinero a extraer: " VerticalContentAlignment="Bottom" Width="113"/>
                            <ComboBox VerticalAlignment="Stretch"
                            materialDesign:HintAssist.Hint="Cantidad a extraer"
                            materialDesign:TextFieldAssist.HasClearButton="True"
                            IsEditable="True"
                            Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBoxItem Content="100"/>
                                <ComboBoxItem Content="500"/>
                                <ComboBoxItem Content="1000"/>
                                <ComboBoxItem Content="2000"/>
                                <ComboBoxItem Content="5000"/>
                            </ComboBox>
                        </DockPanel>

                    </DockPanel>
                    <Button Grid.Column="1" Margin="10" Grid.Row="1" Height="Auto">
                        <Viewbox Stretch="Uniform">
                            <Label Foreground="Black" Content="Finalizar Turno"/>
                        </Viewbox>
                    </Button>
                    <Viewbox Margin="10" Stretch="Uniform" Grid.Row="1">
                        <StackPanel >
                            <Label Content="Recaudacion Total" HorizontalContentAlignment="Center"/>
                            <Label Content="$00.00" HorizontalContentAlignment="Center"/>
                        </StackPanel>
                    </Viewbox>

                </Grid>

                <Grid x:Name="Administrar" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=ItemAdministrar}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="47*"/>
                        <RowDefinition Height="300*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="Boton_Usuarios" Content="Usuarios" Margin="60,10,10,0" FontSize="20" Height="Auto"/>
                    <Button x:Name="Boton_Gastos_30_dias" Content="Dinero Gastado los Ultimos 30 dias" Margin="43,0,75,23" Grid.Row="3" Height="36" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                    <Button Content="Configurar Ticketera" FontSize="20" Grid.Column="1" Visibility="Visible" Margin="10,10,10,0" Height="Auto" Command="Commands:Open.ConfigTicketera"/>
                    <Button x:Name="btVincular" Content="Vinculacion de equipos" FontSize="20" Grid.Column="1" Margin="10,10,10,0" Grid.Row="1" Height="Auto"/>
                    <Button Content="Copia de seguridad y restauración" FontSize="20" Margin="10,10,10,0" Grid.Row="1" Height="Auto"/>
                    <Label Content="Usted dispone de la versión pro y todas sus actualizaciones disponibles hasta el 10/06/2020" HorizontalAlignment="Center" Grid.Row="3" VerticalAlignment="Bottom" Margin="134,0,134,10" Grid.ColumnSpan="2" Height="24" Width="532"/>
                    <Label x:Name="lblConection" HorizontalAlignment="Center" Margin="396,43,396,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.RowSpan="2" Height="8" Width="8"/>

                </Grid>
            </Grid>
        </materialDesign:DrawerHost>
    </Grid>
</Window>
